# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This workflow will install Python dependencies, run tests, lint and rat with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Self Hosted Tests

on: [push]

jobs:
  integration_tests:
    runs-on: self-hosted
    container:
        image: python3.6:latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup Environment
      run: |
          echo "SPINN_DIRS=${GITHUB_WORKSPACE}/spinnaker_tools" >> $GITHUB_ENV
          echo "NEURAL_MODELLING_DIRS=${GITHUB_WORKSPACE}/sPyNNaker/neural_modelling" >> $GITHUB_ENV
      
    - name: Install Python Dependencies
      run: |
        pip3 install --upgrade "setuptools < 50.0.0" wheel
        pip install --user --upgrade pip
        pip install --user --only-binary=numpy,scipy,matplotlib numpy scipy matplotlib

    - name: Clone Repositories to be tested
      uses: ./.github/actions/clone_matching
      with: 
        repository: |
          https://github.com/SpiNNakerManchester/SpiNNUtils.git
          https://github.com/SpiNNakerManchester/SpiNNMachine.git
          https://github.com/SpiNNakerManchester/SpiNNMan.git
          https://github.com/SpiNNakerManchester/PACMAN.git
          https://github.com/SpiNNakerManchester/DataSpecification.git
          https://github.com/SpiNNakerManchester/spalloc.git
          https://github.com/SpiNNakerManchester/sPyNNaker8.git
          https://github.com/SpiNNakerManchester/SpiNNakerGraphFrontEnd.git
          https://github.com/SpiNNakerManchester/spinnaker_tools.git
          https://github.com/SpiNNakerManchester/spinn_common.git
          https://github.com/SpiNNakerManchester/SpiNNFrontEndCommon.git
          https://github.com/SpiNNakerManchester/sPyNNaker.git
          https://github.com/SpiNNakerManchester/JavaSpiNNaker.git
          https://github.com/SpiNNakerManchester/IntroLab.git
          https://github.com/SpiNNakerManchester/PyNN8Examples.git
          https://github.com/SpiNNakerManchester/sPyNNaker8NewModelTemplate.git
          https://${{ secrets.AUTH_SECRET }}@github.com/SpiNNakerManchester/microcircuit_model.git
        
    - name: Setup SpiNNUtils
      run: python setup.py develop
      working-directory: SpiNNUtils

    - name: Make C Code
      run: |
        make -C $SPINN_DIRS
        make -C spinn_common install
        make -C SpiNNFrontEndCommon/c_common
        make -C SpiNNFrontEndCommon/c_common install
        make -C sPyNNaker/neural_modelling
        make -C sPyNNaker8NewModelTemplate/c_models
        make -C SpiNNakerGraphFrontEnd/spinnaker_graph_front_end/examples
        make -C SpiNNakerGraphFrontEnd/gfe_integration_tests/
    
    - name: Install Python Modules
      uses: ./.github/actions/python_setup
      folder: |
        SpiNNMachine
        SpiNNMan
        PACMAN
        DataSpecification
        spalloc
        SpiNNFrontEndCommon
        sPyNNaker
        sPyNNaker8
        SpiNNakerGraphFrontEnd
         
    - name: Install Requirements
      run: |
        # Test requirements
        pip install -r SpiNNMachine/requirements-test.txt
        pip install -r SpiNNMan/requirements-test.txt
        pip install -r PACMAN/requirements-test.txt
        pip install -r DataSpecification/requirements-test.txt
        pip install -r spalloc/requirements-test.txt
        pip install -r SpiNNFrontEndCommon/requirements-test.txt
        pip install -r sPyNNaker/requirements-test.txt
        pip install -r sPyNNaker8/requirements-test.txt
        pip install -r SpiNNakerGraphFrontEnd/requirements-test.txt
       
    - name: Install Java
      run: mvn -f JavaSpiNNaker -Dmaven.test.skip=true -DskipTests --no-transfer-progress package
      
    - name: Prepare Configuration
      run: |
        # Write a sPyNNaker config file for spalloc and java use
        echo "[Machine]" > ~/.spynnaker.cfg
        echo "spalloc_server = 10.11.192.11" >> ~/.spynnaker.cfg
        echo "spalloc_user = Jenkins" >> ~/.spynnaker.cfg
        echo "enable_advanced_monitor_support = True" >> ~/.spynnaker.cfg
        echo "[Java]" >> ~/.spynnaker.cfg
        echo "use_java = True" >> ~/.spynnaker.cfg
        echo "java_call=/usr/bin/java" >> ~/.spynnaker.cfg
        echo "java_properties=-Dspinnaker.parallel_tasks=10" >> ~/.spynnaker.cfg
        printf "java_spinnaker_path=" >> ~/.spynnaker.cfg
        pwd >> ~/.spynnaker.cfg
        # Write a GFE config file for spalloc and java use
        echo "[Machine]" > ~/.spiNNakerGraphFrontEnd.cfg
        echo "spalloc_server = 10.11.192.11" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "spalloc_user = Jenkins" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "enable_advanced_monitor_support = True" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "[Java]" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "use_java = True" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "java_call=/usr/bin/java" >> ~/.spiNNakerGraphFrontEnd.cfg
        echo "java_properties=-Dspinnaker.parallel_tasks=10" >> ~/.spiNNakerGraphFrontEnd.cfg
        printf "java_spinnaker_path=" >> ~/.spiNNakerGraphFrontEnd.cfg
        pwd >> ~/.spiNNakerGraphFrontEnd.cfg
        # Prepare coverage
        rm -f coverage.xml
        rm -f .coverage
        # Prepare for unit tests
        echo "# Empty config" >  ~/.spinnaker.cfg

    - name: Run sPyNNaker Integration Tests
      uses: ./.github/actions/pytest_local
      with:
        tests: sPyNNaker8/p8_integration_tests/quick_test/
        timeout: 1200
        cov_name: sPyNNaker8_Integration.xml
